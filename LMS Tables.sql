show databases;
CREATE database LMS;

use lms;

CREATE TABLE USER_DETAILS
( Id int auto_increment,
email varchar(100) NOT NULL,
first_name varchar(50) NOT NULL,
last_name varchar(50) NOT NULL,
password varchar(50) NOT NULL,
contact_number varchar(10) NOT NULL,
verified boolean NOT NULL,
creator_stamp timestamp default current_timestamp,
creator_user varchar(50),
PRIMARY KEY (id)
);

DESC USER_DETAILS;

CREATE TABLE HIRED_CANDIDATE
( ID INT,
FIRST_NAME VARCHAR(50) NOT NULL,
MIDDLE_NAME VARCHAR(50) NOT NULL,
LAST_NAME VARCHAR(50) NOT NULL,
EMAIL VARCHAR(100) NOT NULL,
HIRED_CITY VARCHAR(50) NOT NULL,
DEGREE VARCHAR(50) NOT NULL,
HIRED_DATE DATE NOT NULL,
MOBILE_NUMBER VARCHAR(10) NOT NULL,
PERMANENT_PINCODE INTEGER(10) NOT NULL,
HIRED_LAB VARCHAR(50) NOT NULL,
ATTITUDE VARCHAR(50),
COMMUNICATION_REMARK VARCHAR(50) NOT NULL,
KNOWLEDGE_REMARK VARCHAR(50) NOT NULL,
AGGREGATE_REMARK VARCHAR(50) NOT NULL,
STATUS VARCHAR(50) NOT NULL,
CREATOR_STAMP TIMESTAMP DEFAULT current_timestamp,
USER_ID INT,
PRIMARY KEY(ID),
FOREIGN KEY (USER_ID) references USER_DETAILS(ID)
);

CREATE TABLE FELLOWSHIP_CANDIDATE
( ID INT,
CIC_ID VARCHAR(50),
FIRST_NAME VARCHAR(50) NOT NULL,
MIDDLE_NAME VARCHAR(50) NOT NULL,
LAST_NAME VARCHAR(50) NOT NULL,
EMAIL VARCHAR(100) NOT NULL,
HIRED_CITY VARCHAR(50) NOT NULL,
DEGREE VARCHAR(50) NOT NULL,
HIRED_DATE DATE NOT NULL,
MOBILE_NUMBER VARCHAR(10) NOT NULL,
PERMANENT_PINCODE VARCHAR(10) NOT NULL,
HIRED_LAB VARCHAR(50) NOT NULL,
ATTITUDE VARCHAR(50),
COMMUNICATION_REMARK VARCHAR(50) NOT NULL,
KNOWLEDGE_REMARK VARCHAR(50) NOT NULL,
AGGREGATE_REMARK VARCHAR(50) NOT NULL,
CREATOR_STAMP TIMESTAMP DEFAULT current_timestamp,
BIRTHDATE DATE NOT NULL,
IS_BIRTHDATE_VERIFIED BOOLEAN NOT NULL,
PARENT_NAME VARCHAR(50) NOT NULL,
PARENT_OCCUPATION VARCHAR(50) NOT NULL,
PARENT_MOBILE_NUMBER VARCHAR(10),
PARENT_ANNUAL_SAL VARCHAR(10) NOT NULL,
LOCAL_ADDRESS VARCHAR(50) NOT NULL,
PERMANENT_ADDRESS VARCHAR(50),
PHOTO_PATH VARCHAR(50) NOT NULL,
JOINIG_DATE DATE NOT NULL,
CADIDATE_STATUS VARCHAR(50),
PERSONAL_INFORMATION VARCHAR(100),
BANK_INFORMATION VARCHAR(50) NOT NULL,
EDUCATION_INFORMATION VARCHAR(50) NOT NULL,
DOCUMENT_STATUS VARCHAR(50),
REMARK VARCHAR(50),
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

DESC FELLOWSHIP_CANDIDATE;

CREATE TABLE CANDIDATE_BANK_DETAILS
(
ID INT,
ACCOUNT_NUMBER VARCHAR(50) NOT NULL,
IS_ACCOUNT_NUM_VERIFIED BOOLEAN NOT NULL,
IFSC_CODE VARCHAR(50) NOT NULL,
IS_IFSC_CODE_VERIFIED BOOLEAN NOT NULL,
PAN_NUMBER VARCHAR(50) NOT NULL,
IS_PAN_NUMBER_VERIFIED BOOLEAN NOT NULL,
ADHAR_NUMBER VARCHAR(50) NOT NULL,
IS_ADHAR_NUM_VERIFIED BOOLEAN NOT NULL,
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
CANDIDATE_ID INT,
PRIMARY KEY(ID),
FOREIGN KEY (CANDIDATE_ID) REFERENCES FELLOWSHIP_CANDIDATE(ID)
);

SHOW TABLES;

ALTER TABLE CANDIDATE_BANK_DETAILS
ADD USER_ID INT;

ALTER TABLE CANDIDATE_BANK_DETAILS
ADD constraint USER_FOREIGNKEY foreign key (USER_ID)references USER_DETAILS(ID);

DESC CANDIDATE_BANK_DETAILS;

CREATE TABLE CANDIDATE_QUALIFICATION
(ID INT,
DIPLOMA VARCHAR(50),
DEGREE VARCHAR(50),
IS_DEGREE_VERIFIED BOOLEAN,
EMPLOYEE_DECIPLINE VARCHAR(50),
IS_EMPLOYEE_DECIPLINE_VERIFIED BOOLEAN,
PASSING_YEAR VARCHAR(50),
IS_PASSING_YEAR_VERIFIED BOOLEAN,
AGGR_PER VARCHAR(50),
FINAL_YEAR_PER VARCHAR(50),
IS_FINAL_YEAR_PER_VERIFIED BOOLEAN,
TRAINING_INSTITUTE VARCHAR (100),
IS_TRAINING_INSTITUTE_VERIFIED BOOLEAN,
TRAINING_DURATION_MONTHS INT,
IS_TRAINING_DURATION_MONTH_VERIFIED BOOLEAN,
OTHER_TRAINING VARCHAR(100),
OTHER_TRAINING_VERIFIED BOOLEAN,
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
CANDIDATE_ID int,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (CANDIDATE_ID) references FELLOWSHIP_CANDIDATE(ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

CREATE TABLE CANDIDATE_DOCUMENTS
(ID INT,
DOC_TYPE VARCHAR(50) NOT NULL,
DOC_PATH VARCHAR(50)NOT NULL,
STATUS VARCHAR(50) NOT NULL,
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
CANDIDATE_ID INT,
PRIMARY KEY(ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID),
FOREIGN KEY (CANDIDATE_ID) REFERENCES FELLOWSHIP_CANDIDATE(ID)
);

CREATE TABLE COMPANY
(ID INT,
NAME VARCHAR(50) NOT NULL,
ADDRESS VARCHAR(50) NOT NULL,
LOCATION VARCHAR(50) NOT NULL,
STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY(ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

CREATE TABLE MAKER_PROGRAM
(ID INT,
PROGRAM_NAME VARCHAR(50) NOT NULL,
PROGRAM_TYPE VARCHAR(50) NOT NULL,
PROGRAM_LINK VARCHAR(200),
TECH_STACK_ID VARCHAR(50) NOT NULL,
TECH_TYPE_ID VARCHAR(50) NOT NULL,
IS_PROGRAM_APPROVED BOOLEAN NOT NULL,
DESCRIPTION VARCHAR(100),
STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

ALTER TABLE MAKER_PROGRAM
MODIFY TECH_TYPE_ID INT;

ALTER TABLE MAKER_PROGRAM
ADD CONSTRAINT FOREIGN KEY (TECH_TYPE_ID) REFERENCES TECH_TYPE(ID);

DESC MAKER_PROGRAM;

SHOW TABLES;

CREATE TABLE APP_PARAMETERS
(ID INT,
KEY_TYPE VARCHAR(50),
KEY_VALUE VARCHAR(50),
KEY_TEXT VARCHAR(50),
CURR_STATUS VARCHAR(50),
LASTUPD_STATUS VARCHAR(50),
SEQ_NUM VARCHAR(10),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

CREATE TABLE MENTOR
(ID INT,
NAME VARCHAR(50) NOT NULL,
MENTOR_TYPE VARCHAR(50) NOT NULL,
LAB_ID INT(10),
STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

DROP TABLE MENTOR;

ALTER TABLE MENTOR
MODIFY LAB_ID INT;

DESC MENTOR;

ALTER TABLE MENTOR
ADD CONSTRAINT FOREIGN KEY(LAB_ID) REFERENCES LAB(ID);

CREATE TABLE MENTOR_IDEATION_MAP
(ID INT,
PARENT_MENTOR_ID INT,
MENTOR_ID INT,
STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID),
FOREIGN KEY (PARENT_MENTOR_ID) REFERENCES MENTOR(ID),
FOREIGN KEY (MENTOR_ID) REFERENCES MENTOR(ID)
);

DESC MENTOR_IDEATION_MAP;

DROP TABLE MENTOR_IDEATION_MAP;

ALTER TABLE MENTOR_IDEATION_MAP
ADD constraint PARENT_MENTOR_FK foreign key(PARENT_MENTOR_ID) REFERENCES MENTOR (ID);

SHOW TABLES;

CREATE TABLE MENTOR_TECH_STACK
(ID INT,
MENTOR_ID INT,
TECH_STACK_ID INT,
STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);



ALTER TABLE MENTOR_TECH_STACK
ADD CONSTRAINT MENTOR_FK foreign key(MENTOR_ID) REFERENCES MENTOR (ID);

ALTER TABLE MENTOR_TECH_STACK
ADD CONSTRAINT TECH_STACK_FK foreign key(TECH_STACK_ID) REFERENCES TECH_STACK (ID);

DESC MENTOR_TECH_STACK;

SHOW databases;
USE LMS;

CREATE TABLE TECH_STACK
(ID INT,
TECH_NAME VARCHAR(50) NOT NULL,
IMAGE_PATH VARCHAR(50),
FRAMEWORK VARCHAR(50),
CURR_STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

CREATE TABLE TECH_TYPE
(ID INT,
TYPE_NAME VARCHAR(50) NOT NULL,
CURR_STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

CREATE TABLE LAB
(ID INT,
NAME VARCHAR(50) NOT NULL,
LOCATION VARCHAR(50) NOT NULL,
ADDRESS VARCHAR(50) NOT NULL,
STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

CREATE TABLE LAB_THRESHOLD
(ID INT,
LAB_CAPACITY VARCHAR(10) NOT NULL,
LEAD_THRESHOLD VARCHAR(10),
IDEATION_ENGG_THRESHOLD VARCHAR(10),
BUDDY_ENGG_THRESHOLD VARCHAR(10),
STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
LAB_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (LAB_ID) REFERENCES LAB(ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

SHOW TABLES;

CREATE TABLE LAB_THRESHOLD
(ID INT,
LAB_CAPACITY VARCHAR(10) NOT NULL,
LEAD_THRESHOLD VARCHAR(10),
IDEATION_ENGG_THRESHOLD VARCHAR(10),
BUDDY_ENGG_THRESHOLD VARCHAR(10),
STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
LAB_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (LAB_ID) REFERENCES LAB(ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

DESC LAB_THRESHOLD;

CREATE TABLE COMPANY_REQUIREMENT
(ID INT,
COMPANY_ID INT,
REQUESTED_MONTH VARCHAR(50),
CITY VARCHAR(50),
IS_DOC_VERIFICATION VARCHAR(50),
REQUIREMENT_DOC_PATH VARCHAR(50),
NO_OF_ENGG INT,
TECH_STACK_ID INT,
TECH_TYPE_ID INT,
MAKER_PROGRAM_ID INT,
LEAD_ID INT,
IDEATION_ENGG_ID INT,
BUDDY_ENGG_ID INT,
SPECIAL_REMARK VARCHAR(100),
STATUS VARCHAR(100),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (TECH_STACK_ID) REFERENCES TECH_STACK(ID),
FOREIGN KEY (TECH_TYPE_ID) REFERENCES TECH_TYPE(ID),
FOREIGN KEY (MAKER_PROGRAM_ID) REFERENCES MAKER_PROGRAM(ID),
FOREIGN KEY (LEAD_ID) REFERENCES MENTOR(ID),
FOREIGN KEY (IDEATION_ENGG_ID) REFERENCES MENTOR(ID),
FOREIGN KEY (BUDDY_ENGG_ID) REFERENCES MENTOR(ID),
FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);

CREATE TABLE CANDIDATE_STACK_ASSIGNMENT
(ID INT,
REQUIREMENT_ID INT,
CANDIDATE_ID INT,
ASSIGN_DATE DATE NOT NULL,
COMPLETE_DATE DATE,
STATUS VARCHAR(50),
CREATOR_STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
USER_ID INT,
PRIMARY KEY (ID),
FOREIGN KEY (REQUIREMENT_ID) REFERENCES COMPANY_REQUIREMENT(ID),
FOREIGN KEY (CANDIDATE_ID) REFERENCES FELLOWSHIP_CANDIDATE(ID),
FOREIGN KEY (USER_ID) REFERENCES USER_DETAILS(ID)
);




